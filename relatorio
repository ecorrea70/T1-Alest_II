O problema consiste em realizar a leitura de um mapa composto por variados caracteres em um arquivo do tipo txt. Esse mapa representa um caminho, onde há números que representam quantias em dinheiro. Devemos seguir esse caminho e ir "coletando" as notas. É importante considerar as sequências de números, por exemplo, onde há ---55--- deve ser adicionado mais 55 ao contador, não mais 5 e novamente mais 5. A partir disso é necessário considerar a direção em que o mapa está indo, pois um valor 87 por exemplo, pode ser interpretado de forma equivocada e ser lido o valor 78. O caminho inicia em algum ponto do lado esquerda e se encerra no caractere '#'.



PRIMEIRA SOLUÇÃO

Depois de estudar a atividade proposta, foi desenvolvido um código simples em Python, onde

// Definir o nome do arquivo, o caractere inicial, as coordenadas iniciais e outras variáveis necessárias
filename = "casos-de-teste/casoD50.txt"
initial_char = "-"
currentX = 0
currentY = 0
counter = 0
number_buffer = ""

// Definir as direções possíveis
Directions = {RIGHT, LEFT, UP, DOWN}
direction = RIGHT

// Tentar abrir o arquivo
try:
    Abrir o arquivo com o nome filename
    Ler o conteúdo do arquivo e armazenar em data
    Dividir as linhas do arquivo e armazenar em rows

    // Função para encontrar a linha inicial
    Definir a função find_initial_line(initial_char, rows):
        Para cada linha e índice da linha em rows:
            Se a linha não estiver vazia e o primeiro caractere for o caractere inicial:
                Definir currentX como o índice da linha
                Parar o loop

    // Funções para mover na matriz
    Definir a função moveLeft():
        Se currentY for maior que 0:
            Decrementar currentY

    Definir a função moveRight():
        Se currentY for menor que o comprimento da linha atual - 1:
            Incrementar currentY

    Definir a função moveUp():
        Se currentX for maior que 0:
            Decrementar currentX

    Definir a função moveDown():
        Se currentX for menor que o número de linhas - 1:
            Incrementar currentX

    // Loop até encontrar o caractere '#'
    Enquanto o caractere atual não for '#':
        Definir currentChar como o caractere na posição (currentX, currentY) de rows

        // Verificar o tipo de caractere e executar a ação correspondente
        Se currentChar for um traço '-':
            Executar a função de movimento correspondente à direção atual

        Senão, se currentChar for um dígito:
            Adicionar o dígito ao número no buffer
            Executar a função de movimento correspondente à direção atual

        Senão, se currentChar for uma barra invertida '\':
            Alterar a direção conforme necessário e executar o movimento correspondente

        Senão, se currentChar for uma barra '|':
            Executar a função de movimento correspondente à direção atual

        Senão, se currentChar for uma barra '/':
            Alterar a direção conforme necessário e executar o movimento correspondente

        // Verificar se chegamos ao final do número
        Se currentChar for uma barra, barra vertical ou '#':
            Se o buffer de números não estiver vazio:
                Adicionar o número no buffer ao contador
                Limpar o buffer para o próximo número

            Se a direção atual for para a esquerda:
                Inverter o contador

    // Mostrar a posição do caractere '#' e o contador
    Mostrar a posição do caractere '#' (currentX + 1, currentY + 1)
    Mostrar o contador

// Lidar com exceções
Capturar exceções de arquivo não encontrado e outros erros

